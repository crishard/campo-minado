import pytest
import tkinter as tk
from campo_minado import CampoMinado, show_game
from functions.show_difficulty_menu import show_difficulty_menu_function

@pytest.fixture
def root():
    return tk.Tk()

@pytest.mark.parametrize("input_field, rows, cols, flags", [

    # para o tabuleiro de nível fácil - 10 testes no total

    # teste 1
    ([
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1],
        [-1,  -1,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0, 0, 0,  0,  0,  0],
        [0,  0,  0,  0,  0,  0, 0,  0],
        [0,  0,  0, 0,  0,  0,  0, - 1],
        [0,  0,  0, 0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0, 0,  0],
        [0,  0,  0,  0,  0,  0, 0,  0],
    ], 8, 8, 10),

    # teste 2
    ([
        [0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  -1,  -1,  -1, -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  0,  0, 0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0,],
        [0, 0,  0,  0, 0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0, 0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,],
    ], 8, 8, 10),

    # teste 3
    ([
        [0,  0, 0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  -1,  -1,  -1, - 1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0, 0, 0,  0,  0,  0, 0,],
        [0,  0,  0, 0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0, 0,  0,  0,],
    ], 8, 8, 10),

    # Teste 4
    ([
        [0,  0,  0,  0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0,  0,  0,  0],
        [0,  0,  0, 0, 0,  0,  0,  0],
        [0,  0,  0,  0,  0,  0, -1,  -1],
        [-1,  -1,  -1, -1,  -1,  -1,  -1, -1],
        [0,  0,  0, 0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0, 0, 0,  0],
        [0,  0,  0,  0,  0,  0, 0,  0],
    ], 8, 8, 10),

    # Teste 5
    ([
        [0,  0, 0,  0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0, 0,  0,  0],
        [0,  0,  0,  0,  0,  0, 0,  0],
        [0,  0, 0,  0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0, 0,  0,  0],
        [-1, -1,  -1,  -1, -1,  -1,  -1, -1],
        [-1,  -1,  0,  0,  0,  0, 0,  0],
        [0,  0,  0,  0,  0,  0,  0,  0],
    ], 8, 8, 10),

    # Teste 6
    ([
        [0,  0, 0,  0,  0,  0,  0,  0],
        [0, 0,  0,  0,  0,  0,  0,  0],
        [0,  0, 0,  0,  0,  0,  0, - 1],
        [0,  0,  0,  0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0,  0,  0,  0],
        [0, 0, 0, 0,  0,  0,  0, 0],
        [0,  0,  -1, -1,  -1,  -1,  -1,  -1],
        [-1,  -1, -1, -1,  0, 0,  0,  0],
    ], 8, 8,10),

    # Teste 7
    ([
        [0,  0,  0,  0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0,  0,  0,  0],
        [0,  0,  0, 0, 0,  0,  0,  0],
        [0,  0,  0,  0,  0,  0, 0,  0],
        [0,  0,  0, 0,  0,  0,  0, 0],
        [0,  0,  0, 0,  0,  0,  0,  0],
        [0,  0,  0,  0,  0, 0, -1,  -1],
        [-1,  -1,  -1,  -1,  -1,  -1, -1,  -1],
    ], 8, 8, 10),

  
    # para o tabuleiro de nível intermediário - 10 testes no total
    # teste 01
    ([
        [-1, -1, -1, -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  0,  0,],
        [0, 0,  0, 0, 0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0, 0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0, 0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0, 0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
    ], 10, 16, 30),


    # teste 02
    ([
        [0, 0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  -1,  -1,],
        [-1,  -1, -1, -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1, -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  0,  0,  0,  0,],
        [0, 0, 0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0, 0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
    ], 10, 16, 30),


    # # teste 06
    ([
        [0, 0, 0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0, 0,  0, 0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  -1,  -1,  -1,  -1,],
        [-1,  -1, -1, -1, -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1, -1, -1,  -1,  -1, -1,  -1,  -1,  -1,  0,  0,  0,  0,  0,  0,],
        [0, 0, 0,  0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
    ], 10, 16, 30),

    # # teste 07
    ([
        [0, 0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0, 0,  0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0,  0, 0,  0,  0,  0,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1, -1,  -1,  -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1, -1,  -1,  -1,  -1, -1, -1,  -1,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
    ], 10, 16, 30),
    # # teste 08
    ([
        [0, 0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0, 0,  0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0, 0, 0,  0,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
    ], 10, 16, 30),
    # # teste 09
    ([
        [0, 0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0, 0,  0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0, 0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0, 0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
    ], 10, 16, 30),

    # para o tabuleiro de nível difícil - 5 testes no total

    # teste 1
    ([
        [-1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1, -1,  -1, -1,
            -1,  -1,  -1, -1,  -1,  -1,  -1,  -1, -1,  -1, -1,],
        [-1,  -1,  -1, -1, -1,  -1, -1,  -1, -1, -1,  -1,  -1, -1,
            -1,  -1,  -1,  -1, -1,  -1,  -1, -1, -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1, -1, -1, -1,
            -1,  -1, -1,  -1,  -1,  -1,  -1, -1,  -1, -1,  -1,],
        [-1,  -1, -1,  -1,  -1, -1, -1,  -1,  -1,  -1,  -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,],
        [0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,],
        [0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0, 0,  0,  0,  0,  0,  0,  0,  0, 0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0, 0,
            0, 0, 0,  0,  0, 0, 0, 0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0, 0,  0,  0,  0, 0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0, 0,  0,  0, 0,  0, 0,
            0,  0,  0,  0, 0,  0,  0,  0, 0,  0,  0,],
        [0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0, 0,  0,  0,  0,  0, 0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,
            0,  0,  0, 0, 0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0,
            0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0, 0, 0,  0,  0,  0, 0, 0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0, 0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0,  0, 0,  0, 0, 0,  0, 0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0, 0, 0,  0,  0,  0, 0,
            0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0, 0,
            0,  0,  0,  0, 0,  0,  0,  0,  0,  0, 0,],
    ], 24, 24, 100),


    # teste 2,
    ([
        [0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0, 0,  0,  0, 0, 0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,],
        [0, 0,  0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0, 0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,],
        [-1,  -1, -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
            -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,],
        [-1,  -1, -1,  -1,  -1,  -1,  -1,  -1, -1, -1,  -1,  -1,  -1,
            -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,],
        [-1,  -1,  -1,  -1,  -1,  -1, -1, -1,  -1, -1,  -1, -1,  -1,
            -1,  -1, -1,  -1,  -1,  -1, -1,  -1,  -1, -1,  -1,],
        [-1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0, 0,  0, 0,  0,
            0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0, 0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0, 0, 0,  0,  0,
            0,  0,  0,  0,  0, 0,  0,  0,  0, 0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,
            0, 0,  0,  0,  0,  0, 0,  0, 0, 0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0, 0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,],
        [0, 0, 0,  0, 0,  0,  0, 0,  0, 0,  0, 0,
            0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0, 0,],
        [0,  0,  0, 0,  0,  0,  0,  0, 0,  0, 0, 0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0, 0, 0,  0,  0,  0,],
        [0, 0,  0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0,  0,  0, 0, 0,  0,  0,  0,  0,  0,  0,],
    ], 24, 24, 100),


    # teste 3,
    ([
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0, 0,  0,  0,  0, 0,  0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0,  0, 0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,
            0,  0,  0, 0,  0, 0,  0,  0, 0, 0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1, -1,  -1,  -1, -1,  -1,  -1, -1,  -1,  -1,  -1, -1, -1,  -1,  -1, -1, -1,  -1,  -1, -1,  -1, -1, -1,  -1,],
        [-1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,
            -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0, 0,  0,  0,  0, 0,  0,
            0, 0,  0,  0,  0, 0, 0, 0,  0,  0, 0, 0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0, 0, 0,  0,  0,  0,
            0, 0,  0, 0,  0,  0,  0, 0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0, 0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0, 0,  0,  0,  0, 0,  0,],
        [0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,],
    ], 24, 24, 100),


    # teste 4
     ([
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0, 0,  0,  0,  0, 0,  0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0,  0, 0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,
            0,  0,  0, 0,  0, 0,  0,  0, 0, 0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0, 0,  0,  0, 0,  0,  0,  0, 0, 0,  0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1, -1,  -1,  -1, -1, -1,  -1,  -1,  -1, -1,  -1,
            -1, -1,  -1,  -1,  -1, -1, -1, -1,  -1,  -1, -1, -1,],
        [-1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1, -1,  -1,  -1, -1, -1,  -1,  -1,  -1,
            -1, -1,  -1, -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,
            -1, -1,  -1,  0,  0,  0,  0,  0, 0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0, 0,  0,  0,  0, 0,  0,],
        [0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,],
    ], 24, 24, 100),
     
    # teste 5
    ([
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0, 0,  0,  0,  0, 0,  0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0,  0, 0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,
            0,  0,  0, 0,  0, 0,  0,  0, 0, 0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0, 0,  0,  0, 0,  0,  0,  0, 0, 0,  0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0, 0,  0,  0,  0, 0,  0,
            0, 0,  0,  0,  0, 0, 0, 0,  0,  0, 0, 0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0, 0, 0,  0,  0,  0,
            0, 0,  0, 0,  0,  0,  0, 0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0, 0,  0,  -1,  -1,  -1,  -1,  -1, -1,  -1, -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1, -1,  -1,  -1, -1,  -1,  -1,  -1, -1,  -1,],
        [-1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,],
        [-1, -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1,  -1, 0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0, 0,  0, 0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,],
    ], 24, 24, 100),
    # teste 6
    ([
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0, 0,  0,  0,  0, 0,  0,  0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0, 0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0,  0, 0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0, 0, 0,  0,  0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0, 0,  0,],
        [0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,
            0,  0,  0, 0,  0, 0,  0,  0, 0, 0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0, 0,  0,  0, 0,  0,  0, 0,  0,  0,  0, 0, 0,  0,  0, 0, 0,  0,  0, 0,  0, 0, 0,  0,],
        [0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,
            0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0, 0,  0,  0, 0, 0,  0,  0,  0, 0,  0,
            0, 0,  0,  0,  0, 0, 0, 0,  0,  0, 0, 0,],
        [0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0, 0,  0,  0, 0, 0,  0,  0,  0,
            0, 0,  0, 0,  0,  0,  0, 0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,
            0, 0,  0,  0,  0,  0,  0,  0, 0,  0, 0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,],
        [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0,  0,  0, 0,  0,  0, 0,  0,  0,  0, 0,  0,],
        [0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0, 0,  0,  -1,  -1,  -1,  -1,],
        [-1, -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,
            -1, -1,  -1,  -1, -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,],
        [-1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, -1,
            -1, -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
        [-1,  -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
            -1,  -1,  -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,],
    ], 24, 24, 100)
    
])


def test_board_validity(input_field, rows, cols, flags):
    
    game = CampoMinado(None, rows, cols, flags, lambda: None)
    game.field = input_field  

    for row in range(rows):
        for col in range(cols):
            cell = game.field[row][col]

            if cell == -1:
                assert 0 <= row < rows, f"Bandeiras fora dos limites na posição ({row}, {col})"
                assert 0 <= col < cols, f"Bandeiras fora dos limites na posição ({row}, {col})"

            elif cell == 0:
                adjacent_flags = 0
                for i in range(-1, 2):
                    for j in range(-1, 2):
                        new_row = row + i
                        new_col = col + j
                        if 0 <= new_row < rows and 0 <= new_col < cols and game.field[new_row][new_col] == -1:
                            adjacent_flags += 1
            else:
                adjacent_flags = 0
                for i in range(-1, 2):
                    for j in range(-1, 2):
                        new_row = row + i
                        new_col = col + j
                        if 0 <= new_row < rows and 0 <= new_col < cols and game.field[new_row][new_col] == -1:
                            adjacent_flags += 1
    
    assert True